package nozama.model;
// Generated 24 fï¿½vr. 2016 08:23:00 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Album generated by hbm2java
 */
@Entity
@Table(name = "album", catalog = "nozama")
public class Album implements java.io.Serializable {

	private Integer idAlbum;
	private Artiste artiste;
	private Product product;
	private Set<TypeSupportAlbm> typeSupportAlbms = new HashSet<TypeSupportAlbm>(0);
	private Set<AlbumHasSingle> albumHasSingles = new HashSet<AlbumHasSingle>(0);

	public Album() {
	}

	public Album(Artiste artiste, Product product) {
		this.artiste = artiste;
		this.product = product;
	}

	public Album(Artiste artiste, Product product, Set<TypeSupportAlbm> typeSupportAlbms, Set<AlbumHasSingle> albumHasSingles) {
		this.artiste = artiste;
		this.product = product;
		this.typeSupportAlbms = typeSupportAlbms;
		this.albumHasSingles = albumHasSingles;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id_album", unique = true, nullable = false)
	public Integer getIdAlbum() {
		return this.idAlbum;
	}

	public void setIdAlbum(Integer idAlbum) {
		this.idAlbum = idAlbum;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_artiste", nullable = false)
	public Artiste getArtiste() {
		return this.artiste;
	}

	public void setArtiste(Artiste artiste) {
		this.artiste = artiste;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_product", nullable = false)
	public Product getProduct() {
		return this.product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "album")
	public Set<TypeSupportAlbm> getTypeSupportAlbms() {
		return this.typeSupportAlbms;
	}

	public void setTypeSupportAlbms(Set<TypeSupportAlbm> typeSupportAlbms) {
		this.typeSupportAlbms = typeSupportAlbms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "album")
	public Set<AlbumHasSingle> getAlbumHasSingles() {
		return this.albumHasSingles;
	}

	public void setAlbumHasSingles(Set<AlbumHasSingle> albumHasSingles) {
		this.albumHasSingles = albumHasSingles;
	}

}
