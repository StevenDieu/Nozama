package nozama.model;
// Generated 21 mars 2016 08:24:02 by Hibernate Tools 4.3.1.Final


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "product", catalog = "nozama",
    uniqueConstraints = @UniqueConstraint(columnNames = "name_tag_date_released") )
public class Product implements java.io.Serializable {


  private Integer idProduct;
  private Product product;
  private String name;
  private String nameTagDateReleased;
  private String description;
  private String urlPicture;
  private Date dateReleased;
  private String type;
  private Set<Product> products = new HashSet<Product>(0);
  private Set<Article> articles = new HashSet<Article>(0);
  private Set<AttrProduct> attrProducts = new HashSet<AttrProduct>(0);
  private Set<Artiste> artistes = new HashSet<Artiste>(0);

  public Product() {}


  public Product(String name, String nameTagDateReleased, String description, String urlPicture,
      Date dateReleased, String type) {
    this.name = name;
    this.nameTagDateReleased = nameTagDateReleased;
    this.description = description;
    this.urlPicture = urlPicture;
    this.dateReleased = dateReleased;
    this.type = type;
  }

  public Product(Product product, String name, String nameTagDateReleased, String description,
      String urlPicture, Date dateReleased, String type, Set<Product> products,
      Set<Article> articles, Set<AttrProduct> attrProducts, Set<Artiste> artistes) {
    this.product = product;
    this.name = name;
    this.nameTagDateReleased = nameTagDateReleased;
    this.description = description;
    this.urlPicture = urlPicture;
    this.dateReleased = dateReleased;
    this.type = type;
    this.products = products;
    this.articles = articles;
    this.attrProducts = attrProducts;
    this.artistes = artistes;
  }

  @Id
  @GeneratedValue(strategy = IDENTITY)


  @Column(name = "id_product", unique = true, nullable = false)
  public Integer getIdProduct() {
    return this.idProduct;
  }

  public void setIdProduct(Integer idProduct) {
    this.idProduct = idProduct;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "id_product_parent")
  public Product getProduct() {
    return this.product;
  }

  public void setProduct(Product product) {
    this.product = product;
  }


  @Column(name = "name", nullable = false)
  public String getName() {
    return this.name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Column(name = "name_tag_date_released", unique = true, nullable = false)
  public String getNameTagDateReleased() {
    return this.nameTagDateReleased;
  }

  public void setNameTagDateReleased(String nameTagDateReleased) {
    this.nameTagDateReleased = nameTagDateReleased;
  }


  @Column(name = "description", nullable = false, length = 65535)
  public String getDescription() {
    return this.description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  @Column(name = "url_picture", nullable = false, length = 1024)
  public String getUrlPicture() {
    return this.urlPicture;
  }

  public void setUrlPicture(String urlPicture) {
    this.urlPicture = urlPicture;
  }

  @Temporal(TemporalType.DATE)
  @Column(name = "date_released", nullable = false, length = 10)
  public Date getDateReleased() {
    return this.dateReleased;
  }

  public void setDateReleased(Date dateReleased) {
    this.dateReleased = dateReleased;
  }


  @Column(name = "type", nullable = false, length = 45)
  public String getType() {
    return this.type;
  }

  public void setType(String type) {
    this.type = type;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
  public Set<Product> getProducts() {
    return this.products;
  }

  public void setProducts(Set<Product> products) {
    this.products = products;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
  public Set<Article> getArticles() {
    return this.articles;
  }

  public void setArticles(Set<Article> articles) {
    this.articles = articles;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
  public Set<AttrProduct> getAttrProducts() {
    return this.attrProducts;
  }

  public void setAttrProducts(Set<AttrProduct> attrProducts) {
    this.attrProducts = attrProducts;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
  public Set<Artiste> getArtistes() {
    return this.artistes;
  }

  public void setArtistes(Set<Artiste> artistes) {
    this.artistes = artistes;
  }



}


