package nozama.model;
// Generated 21 mars 2016 08:24:02 by Hibernate Tools 4.3.1.Final


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "nozama")
public class Order implements java.io.Serializable {

  /**
   * 
   */
  private static final long serialVersionUID = 1L;
  private Integer idOrder;
  private Adress adress;
  private User user;
  private String modePayment;
  private String modeDelivery;
  private float totalProduct;
  private float totalDelivery;
  private float totalOrder;
  private String commentDelivery;
  private Date createTime;
  private Date updateTime;
  private Set<ProductOrder> productOrders = new HashSet<ProductOrder>(0);

  public Order() {}


  public Order(Adress adress, User user, String modePayment, String modeDelivery,
      float totalProduct, float totalDelivery, float totalOrder, Date createTime, Date updateTime) {
    this.adress = adress;
    this.user = user;
    this.modePayment = modePayment;
    this.modeDelivery = modeDelivery;
    this.totalProduct = totalProduct;
    this.totalDelivery = totalDelivery;
    this.totalOrder = totalOrder;
    this.createTime = createTime;
    this.updateTime = updateTime;
  }

  public Order(Adress adress, User user, String modePayment, String modeDelivery,
      float totalProduct, float totalDelivery, float totalOrder, String commentDelivery,
      Date createTime, Date updateTime, Set<ProductOrder> productOrders) {
    this.adress = adress;
    this.user = user;
    this.modePayment = modePayment;
    this.modeDelivery = modeDelivery;
    this.totalProduct = totalProduct;
    this.totalDelivery = totalDelivery;
    this.totalOrder = totalOrder;
    this.commentDelivery = commentDelivery;
    this.createTime = createTime;
    this.updateTime = updateTime;
    this.productOrders = productOrders;
  }

  @Id
  @GeneratedValue(strategy = IDENTITY)


  @Column(name = "id_order", unique = true, nullable = false)
  public Integer getIdOrder() {
    return this.idOrder;
  }

  public void setIdOrder(Integer idOrder) {
    this.idOrder = idOrder;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "id_adress", nullable = false)
  public Adress getAdress() {
    return this.adress;
  }

  public void setAdress(Adress adress) {
    this.adress = adress;
  }

  @ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "id_users", nullable = false)
  public User getUser() {
    return this.user;
  }

  public void setUser(User user) {
    this.user = user;
  }


  @Column(name = "mode_payment", nullable = false, length = 45)
  public String getModePayment() {
    return this.modePayment;
  }

  public void setModePayment(String modePayment) {
    this.modePayment = modePayment;
  }


  @Column(name = "mode_delivery", nullable = false, length = 45)
  public String getModeDelivery() {
    return this.modeDelivery;
  }

  public void setModeDelivery(String modeDelivery) {
    this.modeDelivery = modeDelivery;
  }


  @Column(name = "total_product", nullable = false, precision = 12, scale = 0)
  public float getTotalProduct() {
    return this.totalProduct;
  }

  public void setTotalProduct(float totalProduct) {
    this.totalProduct = totalProduct;
  }


  @Column(name = "total_delivery", nullable = false, precision = 12, scale = 0)
  public float getTotalDelivery() {
    return this.totalDelivery;
  }

  public void setTotalDelivery(float totalDelivery) {
    this.totalDelivery = totalDelivery;
  }


  @Column(name = "total_order", nullable = false, precision = 12, scale = 0)
  public float getTotalOrder() {
    return this.totalOrder;
  }

  public void setTotalOrder(float totalOrder) {
    this.totalOrder = totalOrder;
  }


  @Column(name = "comment_delivery")
  public String getCommentDelivery() {
    return this.commentDelivery;
  }

  public void setCommentDelivery(String commentDelivery) {
    this.commentDelivery = commentDelivery;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "create_time", nullable = false, length = 19)
  public Date getCreateTime() {
    return this.createTime;
  }

  public void setCreateTime(Date createTime) {
    this.createTime = createTime;
  }

  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "update_time", nullable = false, length = 19)
  public Date getUpdateTime() {
    return this.updateTime;
  }

  public void setUpdateTime(Date updateTime) {
    this.updateTime = updateTime;
  }

  @OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
  public Set<ProductOrder> getProductOrders() {
    return this.productOrders;
  }

  public void setProductOrders(Set<ProductOrder> productOrders) {
    this.productOrders = productOrders;
  }



}


